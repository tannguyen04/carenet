<?php

/**
 * Implements hook_menu()
 */
function carenet_custom_menu() {
  $items['provider-listing'] = array(
    'title' => 'Provider Listing',
    'page callback' => 'carenet_custom_list_data',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['provider-get-data'] = array(
    'title' => 'Provider Listing',
    'page callback' => 'carenet_custom_get_data',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['get_data_city'] = array(
    'title' => 'Data City',
    'page callback' => 'carenet_custom_get_data_city',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['get_data_county'] = array(
    'title' => 'Data City',
    'page callback' => 'carenet_custom_get_data_county',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['provider-action/%'] = array(
    'title' => 'Provider action',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('carenet_custom_provider_action', 1),
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/carenet'] = array(
    'title' => 'Carenet',
    'description' => 'Settings for Carenet',
    'position' => 'left',
    'weight' => -10,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );
  
  return $items;
}

function carenet_custom_provider_action($form, &$form_state, $telephone){
	global $base_url;

	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/jquery.datetimepicker.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/custom_form.js', 'file');
	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/jquery.datetimepicker.css', array('group' => CSS_DEFAULT, 'type' => 'file'));

	$form = array();
	//Get Doctor
	$url = $base_url.'/list-provider-by-telephone?telephone='.$telephone;
	$data = drupal_json_decode(file_get_contents($url));
	if(!empty($data['nodes'])){
		$form['providers'] = array(
		  '#type' => 'fieldset', 
		  '#title' => t('Providers'), 
		  '#collapsible' => TRUE, 
		  '#collapsed' => FALSE,
		);
		$doctor = array();
		foreach($data['nodes'] as $item){
			$doctor_tb_info = '<table>
														<tr>
															<td>Name</td>
															<td>NPI</td>
															<td>State</td>
														</tr>
														<tr>
															<td>'.$item['node']['name'].'</td>
															<td>'.$item['node']['npi'].'</td>
															<td>'.$item['node']['state'].'</td>
														</tr>
													</table>';
			$doctor[$item['node']['nid']] = $doctor_tb_info;
		}

		$form['providers']['list_doctor'] = array(
		  '#type' => 'checkboxes',
		  '#options' => $doctor
  	);

		$form['action-doctor'] = array(
		  '#type' => 'fieldset', 
		  '#title' => t('Actions'), 
		  '#collapsible' => TRUE, 
		  '#collapsed' => FALSE,
		);

		$status = array('All' => ' - Any - ');
		$data_status = taxonomy_get_tree(13);
		foreach($data_status as $key => $value){
			$status[$value->tid] = $value->name;
		}

		$form['action-doctor']['status'] = array(
       '#type' => 'select',
       '#title' => t('Status'),
       '#options' => $status,
     //   '#states' => array(
			  //   'visible' => array(
			  //     ':select[name="reason"]' => array('value' => 4848),
			  //     ':textarea[name="comment"]' => array('value' => 4848),
			  //   ),
			  // ),
   	);

   	$reason = array('All' => ' - Any - ');
		$data_reason = taxonomy_get_tree(14);
		foreach($data_reason as $key => $value){
			$reason[$value->tid] = $value->name;
		}

		$form['action-doctor']['reason'] = array(
       '#type' => 'select',
       '#title' => t('Reason'),
       '#options' => $reason,
   	);

   	$form['action-doctor']['person'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Person'), 
		  '#default_value' => 'Person', 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		);

		$form['action-doctor']['email'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Email'), 
		  '#default_value' => 'email', 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		);

		$form['action-doctor']['phone'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Phone'), 
		  '#default_value' => 'phone', 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		);

		$form['action-doctor']['designation'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Designation'), 
		  '#default_value' => 'designation', 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		);

		$form['action-doctor']['date_time'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Date Time Callback'), 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		);

		$form['action-doctor']['comment'] = array(
			'#title' => t('Comment'),
			'#type' => 'textarea',
			'#default_value' => '',
		);

		$form['submit'] = array('#type' => 'submit', '#value' => t('Submit'));

	}else{
		drupal_set_message('Telephone not found','status');
		drupal_goto('/provider-listing');
	}
	
	return $form;
}

function carenet_custom_get_data_county(){
	global $base_url;
	if(!empty($_GET['city'])){
		if($_GET['city'] == 'All'){
			$county ='<option value="All" selected="selected">- Any -</option>';
			$data_county = taxonomy_get_tree(8);
			foreach($data_county as $key => $value){
				$county .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
			}
			print $county;
		}else{
			$url = $base_url.'/get_county_by_city?city='.$_GET['city'];
			$data = drupal_json_decode(file_get_contents($url));

			$list_data = array();
			foreach ($data['nodes'] as $response_data) {
		  	$list_data[$response_data['node']['tid']] = $response_data['node']['county'];
			}

			$list = '<option selected="selected" value="All">- Any -</option>';
			foreach($list_data as $key => $item){
				$list .='<option value="'.$key.'" >'.$item.'</option>';
			}
			print $list;
		}
		
		exit();
	}
}

function carenet_custom_get_data_city(){
	global $base_url;
	if(!empty($_GET['state'])){
		if($_GET['state'] == 'All'){
			$city ='<option value="All" selected="selected">- Any -</option>';
			$data_city = taxonomy_get_tree(6);
			foreach($data_city as $key => $value){
				$city .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
			}
			print $city;
		}else{
			$url = $base_url.'/get-city-by-state?state='.$_GET['state'];
			$data = drupal_json_decode(file_get_contents($url));

			$list_data = array();
			foreach ($data['nodes'] as $response_data) {
		  	$list_data[$response_data['node']['tid']] = $response_data['node']['city'];
			}

			$list = '<option selected="selected" value="All">- Any -</option>';
			foreach($list_data as $key => $item){
				$list .='<option value="'.$key.'" >'.$item.'</option>';
			}
			print $list;
		}
		
		exit();
	}
}

function carenet_custom_list_data(){
	//drupal_add_js(drupal_get_path('module', 'wb_project').'/js/jquery-1.12.0.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/jquery.dataTables.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/dataTables.select.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/custom.js', 'file');

	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/select.dataTables.min.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/jquery.dataTables.min.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
	

	$fieldsArr = array('Phone #', 'Provider', 'City', 'County', 'Status', 'View', 'Last Activity');

	$projects_fields = array();

	$output = '';

	$output .= '<div class="filter_npi" style="display: inline-block;margin-right: 20px;"><label>NPI</label><input type="text" id="npi" name="npi"></div>';

	$city = '<select id="city">';
	$city .='<option value="All" selected="selected">- Any -</option>';
	$data_city = taxonomy_get_tree(6);
	foreach($data_city as $key => $value){
		$city .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$city .='</select>';

	$output .= '<div class="filter_city" style="display: inline-block;margin-right: 20px;"><label>City</label>'.$city.'</div>';

	$state = '<select id="state">';
	$state .='<option value="All" selected="selected">- Any -</option>';
	$data_state = taxonomy_get_tree(7);
	foreach($data_state as $key => $value){
		$state .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$state .='</select>';

	$output .= '<div class="filter_state" style="display: inline-block;margin-right: 20px;"><label>State</label>'.$state.'</div>';

	$county = '<select id="county">';
	$county .='<option value="All" selected="selected">- Any -</option>';
	$data_county = taxonomy_get_tree(8);
	foreach($data_county as $key => $value){
		$county .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$county .='</select>';

	$output .= '<div class="filter_county" style="display: inline-block;margin-right: 20px;"><label>County</label>'.$county.'</div>';
	
	$status = '<select id="status">';
	$status .='<option value="All" selected="selected">- Any -</option>';
	$data_status = taxonomy_get_tree(13);
	foreach($data_status as $key => $value){
		$status .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$status .='</select>';

	$output .= '<div class="filter_status" style="display: inline-block;margin-right: 20px;"><label>Status</label>'.$status.'</div>';

	$output .='<table id="carenet_custom_list_data" class="display" cellspacing="0" width="100%">
        <thead>
            <tr>';
            	foreach ($fieldsArr as $field) {
            		$output .= '<th>'.trim($field).'</th>';
            		$projects_fields[] = array('data' => trim($field));
            	}
        $output .='</tr>
        </thead>
        <tfoot>
            <tr>';
                foreach ($fieldsArr as $field) {
            		$output .= '<th>'.trim($field).'</th>';
            	}
        $output .='</tr>
          </tfoot>
    </table>';
    
  drupal_add_js(array('carenet_custom_list_data_fields' => json_encode($projects_fields)), 'setting');
	return $output;
}

function carenet_custom_get_data(){
	global $base_url;
	$output = '';

	// Add parameter filter
	$parameter = array();
	if(!empty($_POST['search']['value'])){
		$parameter['search_full'] = $_POST['search']['value'];
	}

	if(!empty($_POST['start']) && !empty($_POST['length'])){
		$parameter['page'] = $_POST['start']/$_POST['length'];
	}

	$url = $base_url.'/provide-listing-data?search_full='.$parameter['search_full'].'&npi='.$_GET['npi'].'&city='.$_GET['city'].'&state='.$_GET['state'].'&county='.$_GET['county'].'&status='.$_GET['status'].'&page='.$parameter['page'];

	$data = drupal_json_decode(file_get_contents($url));
	$data_telephone = array();

	foreach ($data['nodes'] as $response_data) {
	  $data_telephone[$response_data['node']['telephone']][] = $response_data['node'];
	}

	$rows = array();
	$i = 1;
	foreach($data_telephone as $key => $phone){
		$provider = array();
		$city = array();
		$county = array();

		foreach($data_telephone[$key] as $item){
			$provider[] = $item['nid'];
			$city[] = $item['city'];
			$county[] = $item['county'];
		}

		$provider = array_unique($provider);
		$city = array_unique($city);
		$county = array_unique($county);

		$rows[] = array('DT_RowId' => $i,
										'Phone #' => $key,
										'Provider' => count($provider),
										'City' => count($city),
										'County' => count($county),
										'Status' => 'New',
										'View' => '<a href="/provider-action/'.$key.'">View</a>',
										'Last Activity' => '');
		$i++;
	}

	$data_listing['data'] = $rows;
  $data_listing['options'] = '';
  $data_listing['files'] = '';
  $data_listing['recordsTotal'] = $data['pager']['count'];
  $data_listing['recordsFiltered'] = $data['pager']['count'];
  return drupal_json_output($data_listing);
}

/**
 * Implements hook_libraries_info().
 */
function carenet_custom_libraries_info() {
  $libraries = array();
  $libraries['fpdf'] = array(
    'name' => 'FPDF',
    'vendor url' => 'http://www.fpdf.org/',
    'download url' => 'http://www.fpdf.org/',
    'files' => array(
      'php' => array(
        'fpdf.php',
      ),
    ),
    'version arguments' => array(
      'file' => 'fpdf.php',
      'pattern' => '/((\d+).(\d+))/',
      'lines' => 6,
    ),
  );

  $libraries['fpdi'] = array(
    'name' => 'FPDI',
    'vendor url' => 'http://www.setasign.com/products/fpdi/about/',
    'download url' => 'http://www.setasign.com/products/fpdi/downloads/',
    'files' => array(
      'php' => array(
        'fpdi.php',
        'fpdf_tpl.php',
      ),
    ),
    'dependencies' => array('fpdf'),
    'version arguments' => array(
      'file' => 'fpdi.php',
      'pattern' => '/((\d+)\.(\d+)\.(\d+))/',
      'lines' => 6,
    ),
  );
  return $libraries;
}

/**
 * Implements hook_requirements()
 */
function carenet_custom_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $t = get_t();
    if ($path = libraries_get_path('fpdf')) {
      if (file_exists($path . '/fpdf.php')) {
        $requirements['fpdf'] = array(
          'title' => $t('FPDF'),
          'value' => $t('fpdf.php found under !path', array('!path' => $path . '/fpdf.php')),
          'severity' => REQUIREMENT_OK,
        );
      }
    }else {
      $requirements['fpdf'] = array(
        'title' => $t('FPDF'),
        'value' => $t('FPDF library was not found. !download the library and place in under sites/all/libraries/fpdf, so that the library can be found at sites/all/libraries/fpdf/fpdf.php.', array('!download' => l(t('Download'), 'http://www.fpdf.org/'))),
        'severity' => REQUIREMENT_ERROR,
      );
    }

    if ($path = libraries_get_path('fpdi')) {
      if (file_exists($path . '/fpdi.php') && file_exists($path . '/fpdf_tpl.php')) {
        $requirements['fpdi'] = array(
          'title' => $t('FPDI'),
          'value' => $t('fpdi.php and fpdf_tpl.php found under !path', array('!path' => $path)),
          'severity' => REQUIREMENT_OK,
        );
      }
      else if (!file_exists($path . '/fpdi.php')) {
        $requirements['fpdi'] = array(
          'title' => $t('FPDI'),
          'value' => $t('fpdi.php not found under !path. View README.txt for further instructions.', array('!path' => $path)),
          'severity' => REQUIREMENT_ERROR,
        );
      }
    }else {
      $requirements['fpdi'] = array(
        'title' => $t('FPDI'),
        'value' => $t('fpdf_tpl.php not found under !path. View README.txt for further instructions.', array('!path' => $path)),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}