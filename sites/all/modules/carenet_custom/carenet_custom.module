<?php

/**
 * Implements hook_menu()
 */
function carenet_custom_menu() {
  $items['providers'] = array(
    'title' => 'Dashboard',
    'page callback' => 'carenet_custom_list_data',
    'access arguments' => array('administer providers'),
    'type' => MENU_CALLBACK,
  );

  $items['provider-get-data'] = array(
    'title' => 'Provider Listing',
    'page callback' => 'carenet_custom_get_data',
    'access arguments' => array('administer providers'),
    'type' => MENU_CALLBACK,
  );

  $items['get_data_city'] = array(
    'title' => 'Data City',
    'page callback' => 'carenet_custom_get_data_city',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['get_data_county'] = array(
    'title' => 'Data City',
    'page callback' => 'carenet_custom_get_data_county',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['provider/discuss/%'] = array(
    'title' => 'Provider Discussion',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('carenet_custom_provider_action', 2),
    'access arguments' => array('administer providers'),
    'type' => MENU_CALLBACK,
  );

  $items['admin/config/carenet'] = array(
    'title' => 'Carenet',
    'description' => 'Settings for Carenet',
    'position' => 'left',
    'weight' => -10,
    'page callback' => 'system_admin_menu_block_page',
    'access arguments' => array('administer site configuration'),
    'file' => 'system.admin.inc',
    'file path' => drupal_get_path('module', 'system'),
  );

  //unload open lock
  $items['unlock_provider'] = array(
    'title' => 'Provider Listing',
    'page callback' => 'carenet_custom_unlock_provider',
    'access arguments' => array('administer providers'),
    'type' => MENU_CALLBACK,
  );
  
  return $items;
}

function carenet_custom_unlock_provider(){
	$telephone = arg(1);
	$url = $base_url.'/list-provider-by-telephone?telephone='.$telephone;
	$data = drupal_json_decode(file_get_contents($url));

	$nids_provider = array();
	foreach($data['nodes'] as $item){
		$nids_provider[] = $item['node']['nid'];
	}

	// lock
	foreach($nids_provider as $nid_item){
		$node_p = node_load($nid_item);
		$node_p->field_lock[LANGUAGE_NONE][0]['value'] = 0;
		node_save($node_p);
	}
}

function carenet_custom_permission() {
 	return array(
 			'administer providers' => array(
 					'title' => 'Access all Providers',
 					'description' => 'View all providers information and update activity'
 				)
 		);
}

function carenet_custom_provider_action($form, &$form_state, $telephone){
	global $base_url;



	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/jquery.datetimepicker.full.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/custom_form.js', 'file');
	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/jquery.datetimepicker.css', array('group' => CSS_DEFAULT, 'type' => 'file'));

	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/custom.css', array('group' => CSS_DEFAULT, 'type' => 'file'));

	$form = array();
	//Get Doctor
	$url = $base_url.'/list-provider-by-telephone?telephone='.$telephone;
	$data = drupal_json_decode(file_get_contents($url));


	$nid = 0;
	$nid = db_query('SELECT nid FROM {node} WHERE type = :type AND title = :title',array(':type' => 'discuss', ':title' => $telephone))->fetchField();	
	if($nid > 0 ){
		$form['discuss_nid'] = array('#type' => 'hidden', '#value' => $nid);
		$node = node_load($nid);
	}
	
	$form['telephone'] = array('#type' => 'hidden', '#value' => $telephone);

	

	$authorized_official = '';
	$official_telephone = '';

	if(!empty($data['nodes'])){

		$doctor = array();

	  $header = array(
	    'name' => t('Name'),
	    'npi' => t('NPI'),
	    'type' => t('Type'),
	    'hpt' => t('Healthcare Provider Taxonomy'),
	    'state' => t('State'),
	    'city' => t('City'),
	    'county' => t('County'),
	  );

	  $options = array();
	  $nids_provider = array();
		foreach($data['nodes'] as $item){
			$nids_provider[] = $item['node']['nid'];
			$options[$item['node']['nid']] = array(
	      'name' => $item['node']['name'],
	      'npi' => $item['node']['npi'],
	      'type' => $item['node']['type'],
	      'hpt' => $item['node']['hpt'],
	      'state' => $item['node']['state'],
	      'city' => $item['node']['city'],
	      'county' => $item['node']['county']
	    );
	    $authorized_official = $item['node']['authorized_official'];
			$official_telephone = $item['node']['official_telephone'];
		}

		$nid_default = array();

		if(!empty($node->field_list_provider[LANGUAGE_NONE][0])){
			foreach($node->field_list_provider[LANGUAGE_NONE] as $item){
				$nid_default[$item['target_id']] = TRUE;
			}
		}

		// lock
		foreach($nids_provider as $nid_item){
			$node_p = node_load($nid_item);
			$node_p->field_lock[LANGUAGE_NONE][0]['value'] = 1;
			node_save($node_p);
		}

		$form['link_back'] = array(
		  '#markup' => '<a class="back_to_provider dexp-shortcodes-button btn btn-sm btn-link" href="/providers" style="float: right;">Back to Providers Listing</a>'
		);

		$form['list_doctor'] = array(
	    '#type' => 'tableselect',
	    '#header' => $header,
	    '#options' => $options,
	    '#empty' => t('No provider found'),
	    '#attributes' => array('class' => array('table table-hover table-bordered')),
	    '#prefix' => '<h2>Providers ('.$telephone.')</h2>',
	    '#default_value' => $nid_default
	  );

		
		$form['action'] = array(
		  '#markup' => '<div id="action-container" class="action row">',
		);


		


   	
   	$form['comment'] = array(
			'#title' => t('Comment'),
			'#type' => 'textarea',
			'#prefix' => '<div class="col-md-12">',
			'#suffix' => '</div>',
		);
		

   	$form['person'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Person'), 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		  '#prefix' => '<div class="col-md-6">',
      '#suffix' => '</div>',
      '#default_value' => (!empty($node->field_dc_person[LANGUAGE_NONE][0]['value'])) ? $node->field_dc_person[LANGUAGE_NONE][0]['value'] : $authorized_official,  
		);

		$form['title'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Title'), 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		  '#prefix' => '<div class="col-md-6">',
      '#suffix' => '</div>',
      '#default_value' => (!empty($node->field_title_discuss[LANGUAGE_NONE][0]['value'])) ? $node->field_title_discuss[LANGUAGE_NONE][0]['value'] : '',
		);

		$form['email'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Email'), 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		  '#prefix' => '<div class="col-md-6">',
       	  '#suffix' => '</div>',
		  '#default_value' => (!empty($node->field_dc_email[LANGUAGE_NONE][0]['value'])) ? $node->field_dc_email[LANGUAGE_NONE][0]['value'] : '',
		);

		$form['phone'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Phone'), 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		  '#prefix' => '<div class="col-md-6">',
       	  '#suffix' => '</div>',
      '#default_value' => (!empty($node->field_dc_phone[LANGUAGE_NONE][0]['value'])) ? $node->field_dc_phone[LANGUAGE_NONE][0]['value'] : $official_telephone
		);

		// $form['designation'] = array(
		//   '#type' => 'textfield', 
		//   '#title' => t('Designation'), 
		//   '#size' => 60, 
		//   '#maxlength' => 128,
		//   '#prefix' => '<div class="col-md-6">',
  //         '#suffix' => '</div>',
  //     '#default_value' => (!empty($node->field_dc_designation[LANGUAGE_NONE][0]['value'])) ? $node->field_dc_designation[LANGUAGE_NONE][0]['value'] : '',
		// );
		$status = array('All' => ' - Any - ');
		$data_status = taxonomy_get_tree(13);
		foreach($data_status as $key => $value){
			$status[$value->tid] = $value->name;
		}

		$form['status'] = array(
       '#type' => 'select',
       '#title' => t('Status'),
       '#options' => $status,
       '#prefix' => '<div class="col-md-6">',
       '#suffix' => '</div>',
       '#default_value' => (!empty($node->field_dc_status[LANGUAGE_NONE][0]['tid'])) ? $node->field_dc_status[LANGUAGE_NONE][0]['tid'] : 'All',
   	);

   	$reason = array('All' => ' - Any - ');
		$data_reason = taxonomy_get_tree(14);
		foreach($data_reason as $key => $value){
			$reason[$value->tid] = $value->name;
		}

		$form['reason'] = array(
       '#type' => 'select',
       '#title' => t('Reason'),
       '#options' => $reason,
       '#prefix' => '<div class="col-md-6">',
       '#suffix' => '</div>',
       '#default_value' => (!empty($node->field_dc_reason[LANGUAGE_NONE][0]['tid'])) ? $node->field_dc_reason[LANGUAGE_NONE][0]['tid'] : 'All',
   	);

		$date_default = '';
		if(!empty($node->field_dc_date['und'][0]['value'])){
			$time = strtotime($node->field_dc_date['und'][0]['value']);
			$date_default = format_date($time,'custom', 'm/d/Y H:i',date_default_timezone());
		}

		$form['date_time'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Date Time Callback'), 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		  '#default_value' => $date_default
		);

		

		$card_rate = array('All' => ' - Any - ');
		$result = db_query('SELECT n.nid FROM {node} as n
												INNER JOIN {field_data_field_card_type} as c ON c.entity_id = n.nid 
												WHERE n.type = :type AND c.field_card_type_value = :field_card_type_value AND n.status = 1',array(':type' => 'card_rate', ':field_card_type_value' => 'master'));

		foreach($result as $record){
			$node_card = node_load($record->nid);
			$card_rate[$node_card->nid] =  $node_card->title;
		}

		if(!empty($form_state['values']['card_rate'])){
			$default_card_rate = $form_state['values']['card_rate'];
		}else{
			$default_card_rate = (!empty($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id'])) ? $node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id'] : 'All';
		}

		if(!empty($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id'])){
			if(!array_key_exists($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id'],$card_rate)){
				$node_exists = node_load($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id']);
				$card_rate[$node_exists->nid] = $node_exists->title;
			}
		}

		$form['#tree'] = TRUE;
		$form['card_rate'] = array(
       '#type' => 'select',
       '#title' => t('Card Rate'),
       '#options' => $card_rate,
       '#default_value' => $default_card_rate,
       '#ajax' => array(
			    'wrapper' => 'card_rate_item_wrapper',
			    'callback' => 'carenet_custom_card_rate_item_ajax_callback',
			    'method' => 'replace',
			  ),
       '#prefix' => '<div class="col-md-12">',
          '#suffix' => '</div>',
   	);


		$form['card_rate_item_wrapper'] = array(
        '#type' => 'fieldset',
        '#title' => t('Rate Detail'),
        '#prefix' => '<div id="card_rate_item_wrapper" class="col-md-12">',
        '#suffix' => '</table></div>',
    );


		if(!empty($form_state['values']['card_rate']) && is_numeric($form_state['values']['card_rate'])){
			$data_nid_card_item = $form_state['values']['card_rate'];
		}else if($default_card_rate != 'All'){
			$data_nid_card_item = $node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id'];
		}else{
			$data_nid_card_item = '';
		}


    if(!empty($data_nid_card_item)){

			$nid = $data_nid_card_item;
			$node_card = node_load($nid);

			$list_item = array();
			if(!empty($node_card->field_card_rate_item[LANGUAGE_NONE][0])){
				$form['card_rate_item_wrapper']['card_rate_item_top'] = array(
			        '#prefix' => '<table class="table table-hover table-bordered sticky-enabled table-select-processed tableheader-processed">',
			    );

				$form['card_rate_item_wrapper']['card_rate_item_desc'] = array(
			        '#prefix' => '<tr>
			        								<td>Line Item</td>
			        								<td>Description</td>
			        								<td>Price (USD)</td>
			        							</tr>',
			  );

			  // $form['card_rate_item_wrapper']['card_rate_item_desc_1'] = array(
			  //       '#prefix' => '<tr>
			  //       								<td></td>
			  //       								<td>General Medical Examination</td>
			  //       								<td></td>
			  //       							</tr>',
			  // );

			  $form['card_rate_item_wrapper']['card_rate_item_desc_2'] = array(
			        '#prefix' => '<tr>
			        								<td></td>
			        								<td>'.$node_card->body['und'][0]['value'].'</td>
			        								<td></td>
			        							</tr>',
			  );
			  $i = 1;
				foreach($node_card->field_card_rate_item[LANGUAGE_NONE] as $item_d){
					$form['card_rate_item_wrapper']['card_rate_item_top_'.$item_d['value']] = array(
			        '#prefix' => '<tr>',
			    );
			    
					$field_data = field_collection_item_load($item_d['value']);

					$form['card_rate_item_wrapper']['card_rate_item_number_'.$item_d['value']] = array(
			        '#prefix' => '<td>'.$i.'</td>',
			    );

					$form['card_rate_item_wrapper']['card_rate_item_label_'.$item_d['value']] = array(
			        '#prefix' => '<td>'.$field_data->field_text_title[LANGUAGE_NONE][0]['value'].'</td>',
			    );

					$form['card_rate_item_wrapper']['custom_price_'.$nid.'_'.$item_d['value']] = array(
					  '#type' => 'textfield', 
					  '#size' => 30, 
					  '#maxlength' => 128,
					  '#prefix' => '<td>',
					  '#suffix' => '</td>',
					  '#default_value' => $field_data->field_price[LANGUAGE_NONE][0]['value']
					);

					$form['card_rate_item_wrapper']['card_rate_item_bottom_'.$item_d['value']] = array(
			        '#prefix' => '</tr>',
			    );
			    $i++;
				}

				$form['card_rate_item_wrapper']['card_rate_item_bottom'] = array(
			        '#prefix' => '</table>',
			    );
			}
		}

		$method_contact = array('mail' => 'Email','fax' => 'Fax');
   	$form['method_contact'] = array(
       '#type' => 'radios',
       '#title' => t('Method contact'),
       '#options' => $method_contact,
       '#default_value' => (!empty($node->field_status_fax_mail[LANGUAGE_NONE][0]['value'])) ? $node->field_status_fax_mail[LANGUAGE_NONE][0]['value'] : 'mail'
   	);

   	$fax_status = array('notsend' => 'Not sent yet','send' => 'Fax sent');
   	$form['fax'] = array(
       '#type' => 'select',
       '#title' => t('Fax status'),
       '#options' => $fax_status,
       '#default_value' => (!empty($node->field_pv_callback_fax[LANGUAGE_NONE][0]['value'])) ? $node->field_pv_callback_fax[LANGUAGE_NONE][0]['value'] : ''
   	);

   	$form['fax_number'] = array(
		  '#type' => 'textfield', 
		  '#title' => t('Fax Number'), 
		  '#size' => 60, 
		  '#maxlength' => 128, 
		  '#prefix' => '<div class="col-md-6">',
       	  '#suffix' => '</div>',
       	'#default_value' => (!empty($node->field_fax_number[LANGUAGE_NONE][0]['value'])) ? $node->field_fax_number[LANGUAGE_NONE][0]['value'] : ''
		);

		$list_comment = '';
   	if(!empty($node->field_comment_list[LANGUAGE_NONE][0]['value'])){
   		$list_comment .= '<h3>List comment</h3><ul>';
   		$data_list_cm = array();
   		foreach($node->field_comment_list[LANGUAGE_NONE] as $item){
   			$data_list_cm[$item['value']] = $item['value'];
   		}

   		foreach($data_list_cm as $item){
   			$field_data = field_collection_item_load($item);
   			$time = strtotime($field_data->field_date[LANGUAGE_NONE][0]['value']);
   			$list_comment .= '<li>'.$field_data->field_comment[LANGUAGE_NONE][0]['value'].' - '.date('m/d/Y H:i',$time).'</li>';
   		}
   		
   		$list_comment .= '</ul>';
   	}

   	$form['list-comment'] = array(
		  '#markup' => '<div class="list-comment col-md-12">'.$list_comment.'</div>',
		);

		$form['action_end'] = array(
		  '#markup' => '</div>',
		);

		$form['button_cancel'] = array(
		  '#markup' => '<a class="dexp-shortcodes-button btn btn-sm gray btn-link cancel_button" onclick="confirm("Are you sure ?") && unlock_provider();">Cancel</a>',
		);
		$form['submit'] = array('#type' => 'submit', '#value' => t('Submit'));



	}else{
		drupal_set_message('Telephone not found','status');
		drupal_goto('/providers');
	}
	
	return $form;
}

function carenet_custom_card_rate_item_ajax_callback($form, $form_state) {
  return $form['card_rate_item_wrapper'];
}

function carenet_custom_provider_action_validate($form, &$form_state){
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/jquery.datetimepicker.full.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/custom_form.js', 'file');
	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/jquery.datetimepicker.css', array('group' => CSS_DEFAULT, 'type' => 'file'));

	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/custom.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
	//validate doctor
	$list_check_doctor = 0;
	$data = $form_state['values'];
	foreach($data['list_doctor'] as $key => $doctor){
		if($doctor > 0){
			$list_check_doctor = 1;
		}
	}

	if($list_check_doctor == 0){
		form_set_error('list_doctor', 'Please choose one option');
	}

	

	switch ($data['status']) {
		case 'All':
			form_set_error('status', 'Please choose one option status');
			break;

		//Accepted
		case 4921:
			if(empty($data['person'])){
				form_set_error('person', 'Please enter Person Name');
			}

			if(empty($data['phone'])){
				form_set_error('phone', 'Please enter Person Name');
			}
			break;

		//Callback
		case 4851:
			if(empty($data['person'])){
				form_set_error('person', 'Please enter Person Name');
			}
			if(empty($data['phone'])){
				form_set_error('phone', 'Please enter Person Name');
			}
			if(empty($data['comment'])){
				form_set_error('comment', 'Please enter the reason into the comment box');
			}
			if(empty($data['date_time'])){
				form_set_error('date_time', 'Please enter date time');
			}
			break;
		//Follow up
		case 4920:
			if(empty($data['date_time'])){
				form_set_error('date_time', 'Please enter date time');
			}
			break;
		//Interested
		case 4919:
			if(empty($data['phone']) && $data['method_contact'] =='mail'){
				form_set_error('phone', 'Please enter phone number');
			}

			if(empty($data['person']) || trim($data['person']) == ''){
				form_set_error('person', 'Please enter Person Name');
			}

			if($data['method_contact'] == 'fax' && empty($data['fax_number'])){
				form_set_error('fax_number', 'Please enter fax number');
			}

			if(empty($data['card_rate']) || $data['card_rate'] == 'All'){
				form_set_error('card_rate', 'Please choose card rate');
			}

			break;
		//Rejected
		case 4849:
			if(empty($data['reason']) || $data['reason'] == 'All'){
				form_set_error('reason', 'Please choose one option reason');
			}
			if($data['reason'] == 4918 && empty($data['comment'])){
				form_set_error('comment', 'Please enter the reason into the comment box');
			}
			break;
		//No Response / Voice Message
		case 4850:
			if(empty($data['date_time'])){
				form_set_error('date_time', 'Please enter date time');
			}
			break;
	}
	
}

function carenet_custom_provider_action_submit($form, &$form_state){
	global $user, $base_url;
	if(!empty($form_state['values']['list_doctor'])){
		$data = $form_state['values'];
		$list_doctor = $data['list_doctor'];

		//Check node discuss
		if(!empty($data['discuss_nid']) && $data['discuss_nid'] != 0){
			$node = node_load($data['discuss_nid']);
		}else{
			$node = new stdClass();
		  $node->title = $data['telephone'];
		  $node->type = 'discuss';
		  node_object_prepare($node);
		  $node->language = LANGUAGE_NONE;
		  $node->uid = $user->uid; 
		  $node->status = 1; //(1 or 0): published or not
		  $node->promote = 0; 
		}

		$link_active = '';

		if(!empty($data['status']) && $data['status'] != 'All'){
	  	$node->field_dc_status[LANGUAGE_NONE][0]['tid'] = $data['status'];

  		if(($data['status'] == 4919) && empty($node->field_token[LANGUAGE_NONE][0]['value'])) {
	  		$token = md5(uniqid(rand(), true));
	  		$node->field_token[LANGUAGE_NONE][0]['value'] = $token;
	  	}

	  	if(($data['status'] == 4919) && isset($node->field_token[LANGUAGE_NONE][0]['value']) && $data['method_contact'] == 'mail') {
	  		$token = $node->field_token[LANGUAGE_NONE][0]['value'];
	  		drupal_set_message('Here is: '. l(t('Activation Link'), $base_url.'/activate/'.$token, array('attributes' => array('class' => 'about-link'))));
	  		
	  	}

	  	if($data['status'] == 4919){
	  		$link_active = l(t('Activation Link'), $base_url.'/activate/'.$token, array('attributes' => array('class' => 'about-link')));
	  	}
	  	
		}

		  if(!empty($data['reason']) && $data['reason'] !='All'){
		  	$node->field_dc_reason[LANGUAGE_NONE][0]['tid'] = $data['reason'];
		  }

		  if(!empty($data['person'])){
		  	$node->field_dc_person[LANGUAGE_NONE][0]['value'] = $data['person'];
		  }

		  if(!empty($data['title'])){
		  	$node->field_title_discuss[LANGUAGE_NONE][0]['value'] = $data['title'];
		  }

		  if(!empty($data['email'])){
		  	$node->field_dc_email[LANGUAGE_NONE][0]['value'] = $data['email'];
		  }

		  if(!empty($data['phone'])){
		  	$node->field_dc_phone[LANGUAGE_NONE][0]['value'] = $data['phone'];
		  }

		  if(!empty($data['designation'])){
		  	$node->field_dc_designation[LANGUAGE_NONE][0]['value'] = $data['designation'];
		  }

		  if(!empty($data['date_time'])){
		  	$node->field_dc_date[LANGUAGE_NONE][0]['value'] = format_date(strtotime($data['date_time']), 'custom', 'Y-m-d H:i', 'UTC');
		  }

		  if(!empty($data['comment'])){
		  	$field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_comment_list'));
				$field_collection_item->setHostEntity('node', $node);
				$field_collection_item->field_comment[LANGUAGE_NONE][0]['value'] = $data['comment'];
				$field_collection_item->field_date[LANGUAGE_NONE][0]['value'] = format_date(time(), 'custom', 'Y-m-d H:i', 'UTC');
				$field_collection_item->save();
				$key_data = count($node->field_comment_list[LANGUAGE_NONE]);
				$node->field_comment_list[LANGUAGE_NONE][$key_data]['value'] = $field_collection_item->item_id;
		  }

		  if(!empty($data['card_rate']) && $data['card_rate'] != 'All'){
		  	if($data['status'] == 4919){

		  		$node_card = node_load($data['card_rate']);

			  	// Check custom field
			  	$check_custom = FALSE;
			  	foreach($node_card->field_card_rate_item[LANGUAGE_NONE] as $item){
			  		//custom_price_'.$nid.'_'.$item_d['value']
			  		$field_data = field_collection_item_load($item['value']);
			  		if($data['card_rate_item_wrapper']['custom_price_'.$data['card_rate'].'_'.$item['value']] != $field_data->field_price[LANGUAGE_NONE][0]['value']){
			  			$check_custom = TRUE;
			  		}
			  	}
			  	//


			  	if($check_custom && $node_card->field_card_type['und'][0]['value'] == 'master'){
			  		

			  		$node_card_new = new stdClass();
					  $node_card_new->title = $node_card->title.'_'.$data['telephone'];
					  $node_card_new->type = 'card_rate';
					  node_object_prepare($node_card_new);
					  $node_card_new->language = LANGUAGE_NONE;
					  $node_card_new->uid = $user->uid; 
					  $node_card_new->status = 1; //(1 or 0): published or not
					  $node_card_new->promote = 0; 

					  $node_card_new->body = $node_card->body;
					  $node_card_new->field_healthcare_provider = $node_card->field_healthcare_provider;
					  //$node_card_new->field_document = $node_card->field_document;
			  		
			  		$node_card_new->field_card_type[LANGUAGE_NONE][0]['value'] = 'custom';

			  		foreach($node_card->field_card_rate_item[LANGUAGE_NONE] as $key => $item){
			  			$field_data = field_collection_item_load($item['value']);

			  			$field_collection_item = entity_create('field_collection_item', array('field_name' => 'field_card_rate_item'));
							$field_collection_item->setHostEntity('node', $node_card_new);
							$field_collection_item->field_text_title[LANGUAGE_NONE][0]['value'] = $field_data->field_text_title[LANGUAGE_NONE][0]['value'];
							$field_collection_item->field_price[LANGUAGE_NONE][0]['value'] = $data['card_rate_item_wrapper']['custom_price_'.$data['card_rate'].'_'.$item['value']];
							$field_collection_item->save();
							$node_card_new->field_card_rate_item[LANGUAGE_NONE][$key]['value'] = $field_collection_item->item_id;
			  		}

			  		$node_card_new = node_submit($node_card_new);
			  		node_save($node_card_new);
			  		

			  		if(!empty($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id']) && $node_card->field_card_type['und'][0]['value'] != 'master'){
			  			$node_data_check = node_load($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id']);
			  			if($node_data_check->field_card_type['und'][0]['value'] != 'master'){
			  				node_delete($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id']);
			  			}
			  		}

			  		$node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id'] = $node_card_new->nid;

			  	}else{



			  		if($check_custom){
				  		foreach($node_card->field_card_rate_item[LANGUAGE_NONE] as $key => $item){
					  		$field_data = field_collection_item_load($item['value']);
					  		if($data['card_rate_item_wrapper']['custom_price_'.$data['card_rate'].'_'.$item['value']] != $field_data->field_price[LANGUAGE_NONE][0]['value']){

									$field_collection_item = entity_load('field_collection_item', array($item['value']));
									$field_collection_item[$item['value']]->field_price[LANGUAGE_NONE][0]['value'] = $data['card_rate_item_wrapper']['custom_price_'.$data['card_rate'].'_'.$item['value']];
									$field_collection_item[$item['value']]->save();

					  		}
					  	}
				  	}

				  	if(!empty($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id']) && $node_card->field_card_type['und'][0]['value'] == 'master'){
			  			$node_data_check = node_load($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id']);
			  			if($node_data_check->field_card_type['und'][0]['value'] != 'master'){
			  				node_delete($node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id']);
			  			}
			  		}

			  		$node->field_card_rate_ref[LANGUAGE_NONE][0]['target_id'] = $node_card->nid;
			  	}	

			  	//fax number
		  		if(!empty($data['fax_number'])){
					  	$node->field_fax_number[LANGUAGE_NONE][0]['value'] = $data['fax_number'];
		  		}
		  	}
		  }

		  if(!empty($data['method_contact'])){
		  	$node->field_status_fax_mail['und'][0]['value'] = $data['method_contact'];
		  }
		  
		  if(!empty($data['fax']) && $data['method_contact'] != 'mail'){
		  	$node->field_pv_callback_fax[LANGUAGE_NONE][0]['value'] = $data['fax'];
		  }

		  //List doctor save
		  $list_doctor_save = array();
		  foreach($list_doctor as $key => $doctor){
				if($doctor > 0){
					$list_doctor_save[]['target_id'] = $doctor;

					$referDoc = node_load($doctor);

					if(!empty($data['date_time'])){
				  	$referDoc->field_last_datetime[LANGUAGE_NONE][0]['value'] = format_date(strtotime($data['date_time']), 'custom', 'Y-m-d', 'UTC');
				  }
				  
				  if(!empty($data['status']) && $data['status'] != 'All'){
						$referDoc->field_pv_status[LANGUAGE_NONE][0]['tid'] = $data['status'];
				  }
				  node_save($referDoc);
					
				}
			}

			if(!empty($list_doctor_save)){
				$node->field_list_provider[LANGUAGE_NONE] = $list_doctor_save;
			}
			
		  $node = node_submit($node);
		  node_save($node);

		  drupal_set_message('The discussion has been updated');
		  //send mail
		 if($data['status'] == 4919){
		 	switch ($data['method_contact']) {
		 		case 'mail':
		 			$mail_sent = $data['email'];
		 			$params = array('mail_to' => $mail_sent,
		 											'subject' => 'Carenet activation',
		 											'body' => 'Click here to active your account: '.$link_active
		 										 );
		 			drupal_mail('carenet_custom', 'carenet_custom_mail', $mail_sent, LANGUAGE_NONE , $params, variable_get('site_mail', ini_get('sendmail_from')), TRUE);
		 			drupal_set_message('Sent mail to doctor success');
		 			break;
		 		case 'fax':
		 			$mail_sent = variable_get('site_mail', '');
		 			$params = array('mail_to' => $mail_sent,
		 											'subject' => 'Carenet Fax',
		 											'body' => 'account fax'
		 										 );
		 			drupal_mail('carenet_custom', 'carenet_custom_mail', $mail_sent, LANGUAGE_NONE , $params, variable_get('site_mail', ini_get('sendmail_from')), TRUE);
		 			drupal_set_message('Sent mail to Admin success');
		 			break;
		 	}
		}
	}
	//unlock provider
	carenet_custom_unlock_provider();
}

function carenet_custom_mail($key, &$message, $params) {
  switch ($key) {
    case 'carenet_custom_mail':
      $message['to'] = $params['mail_to'];
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['body'];
      break;
  }
}

function carenet_custom_form_alter(&$form, &$form_state, $form_id) {
 	if($form_id == 'provider_node_form'){
 		drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/custom_add_provider.js', 'file');
 		$form['field_pv_city']['und']['#options'] = array("_none" =>  "- None -");
 		$form['field_pv_county']['und']['#options'] = array("_none" =>  "- None -");
 		//$form['#validate'][] = 'carenet_custom_provider_node_form_validate';
 	}
}

// function carenet_custom_provider_node_form_validate(&$form, &$form_state){
// 	$data = $form_state['values'];
// 	$npi = $data['field_pv_npi'][LANGUAGE_NONE][0]['value'];
// 	if(!empty($npi)){
// 			$result = db_query('SELECT entity_id FROM {field_data_field_pv_npi} WHERE field_pv_npi_value = :field_pv_npi_value',array(':field_pv_npi_value' => $npi))->fetchField();
// 		if(!empty($result)){
// 			form_set_error('field_pv_npi', 'NPI existing');
// 		}
// 	}
// }

function carenet_custom_get_data_county(){
	global $base_url;
	if(!empty($_GET['state'])){
		if($_GET['city'] == 'All'){
			$county ='<option value="All" selected="selected">- Any -</option>';
			$data_county = taxonomy_get_tree(8);
			foreach($data_county as $key => $value){
				$county .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
			}
			print $county;
		}else{
			$url = $base_url.'/get-county-by-state?state='.$_GET['state'];
			$data = drupal_json_decode(file_get_contents($url));

			$list_data = array();
			foreach ($data['nodes'] as $response_data) {
		  	$list_data[$response_data['node']['tid']] = $response_data['node']['county'];
			}

			$list = '<option selected="selected" value="All">- Any -</option>';
			foreach($list_data as $key => $item){
				$list .='<option value="'.$key.'" >'.$item.'</option>';
			}
			print $list;
		}
		
		exit();
	}
}

function carenet_custom_get_data_city(){
	global $base_url;
	if(!empty($_GET['county'])){
		if($_GET['state'] == 'All'){
			$city ='<option value="All" selected="selected">- Any -</option>';
			$data_city = taxonomy_get_tree(6);
			foreach($data_city as $key => $value){
				$city .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
			}
			print $city;
		}else{
			$url = $base_url.'/get-city-by-county?county='.$_GET['county'];
			$data = drupal_json_decode(file_get_contents($url));

			$list_data = array();
			foreach ($data['nodes'] as $response_data) {
		  	$list_data[$response_data['node']['tid']] = $response_data['node']['city'];
			}

			$list = '<option selected="selected" value="All">- Any -</option>';
			foreach($list_data as $key => $item){
				$list .='<option value="'.$key.'" >'.$item.'</option>';
			}
			print $list;
		}
		
		exit();
	}
}

function carenet_custom_list_data(){
	//drupal_add_js(drupal_get_path('module', 'wb_project').'/js/jquery-1.12.0.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/jquery.datetimepicker.full.min.js', 'file');
	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/jquery.datetimepicker.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/jquery.dataTables.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/dataTables.select.min.js', 'file');
	drupal_add_js(drupal_get_path('module', 'carenet_custom').'/js/custom.js', 'file');

	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/select.dataTables.min.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
	drupal_add_css(drupal_get_path('module', 'carenet_custom').'/css/jquery.dataTables.min.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
	

	$fieldsArr = array('Phone #','Provider', 'City', 'County', 'Status', 'View', 'Last Activity');

	$projects_fields = array();

	$output = '';

	$priority = '<select id="priority">';
	$priority .='<option value="All" selected="selected">- Any -</option>';
	$data_priority = taxonomy_get_tree(10);
	foreach($data_priority as $key => $value){
		$priority .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$priority .='</select>';

	$output .= '<div class="filter_priority" style="display: inline-block;margin-right: 20px;"><label>Priority</label>'.$priority.'</div>';

	$hpt = '<select id="hpt">';
	$hpt .='<option value="All" selected="selected">- Any -</option>';
	$data_hpt = taxonomy_get_tree(11);
	foreach($data_hpt as $key => $value){
		$hpt .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$hpt .='</select>';

	$output .= '<div class="filter_hpt" style="display: inline-block;margin-right: 20px;"><label>Healthcare Provider Taxonomy</label>'.$hpt.'</div>';	

	$state = '<select id="state">';
	$state .='<option value="All" selected="selected">- Any -</option>';
	$data_state = taxonomy_get_tree(7);
	foreach($data_state as $key => $value){
		$state .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$state .='</select>';

	$output .= '<div class="filter_state" style="display: inline-block;margin-right: 20px;"><label>State</label>'.$state.'</div>';

	
	$county = '<select id="county">';
	$county .='<option value="All" selected="selected">- Any -</option>';
	$data_county = taxonomy_get_tree(8);
	foreach($data_county as $key => $value){
		$county .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$county .='</select>';

	$output .= '<div class="filter_county" style="display: inline-block;margin-right: 20px;"><label>County</label>'.$county.'</div>';

	$city = '<select id="city">';
	$city .='<option value="All" selected="selected">- Any -</option>';
	$data_city = taxonomy_get_tree(6);
	foreach($data_city as $key => $value){
		$city .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$city .='</select>';

	$output .= '<div class="filter_city" style="display: inline-block;margin-right: 20px;"><label>City</label>'.$city.'</div>';
	
	$status = '<select id="status">';
	$status .='<option value="All" selected="selected">- Any -</option>';
	$data_status = taxonomy_get_tree(13);
	foreach($data_status as $key => $value){
		$status .='<option value="'.$value->tid.'" >'.$value->name.'</option>';
	}
	$status .='</select>';

	

	$output .= '<div class="filter_status" style="display: inline-block;margin-right: 20px;"><label>Status</label>'.$status.'</div>';

	$output .= '<div class="filter_date" style="display: none;margin-right: 20px;vertical-align: top;"><label>Date</label><input type="text" id="date_tick" name="date"></div>';

	$output .= '<div class="filter_my_quee" style="display: inline-block;margin-right: 20px;	"><label>My queue</label><input type="checkbox" id="my_quee" name="my_quee"></div>';

	

	$output .='<table id="carenet_custom_list_data" class="display" cellspacing="0" width="100%">
        <thead>
            <tr>';
            	foreach ($fieldsArr as $field) {
            		$output .= '<th>'.trim($field).'</th>';
            		$projects_fields[] = array('data' => trim($field));
            	}
        $output .='</tr>
        </thead>
        <tfoot>
            <tr>';
                foreach ($fieldsArr as $field) {
            		$output .= '<th>'.trim($field).'</th>';
            	}
        $output .='</tr>
          </tfoot>
    </table>';
    
  drupal_add_js(array('carenet_custom_list_data_fields' => json_encode($projects_fields)), 'setting');
	return $output;
}

function carenet_custom_get_data(){
	global $base_url,$user;
	$output = '';

	// Add parameter filter
	$parameter = array();
	if(!empty($_POST['search']['value'])){
		$parameter['search_full'] = $_POST['search']['value'];
	}

	if(!empty($_POST['start']) && !empty($_POST['length'])){
		$parameter['page'] = $_POST['start']/$_POST['length'];
	}

	$date = '';
	if(!empty($_GET['date']) && $_GET['date'] !='undefined'){
		$time = explode('/',$_GET['date']);
		$date = $time[2].'-'.$time[0].'-'.$time[1];
	}

	$list_quee_arg = '';
	if(!empty($_GET['my_quee']) && $_GET['my_quee'] == 1){
		$url_my_quee = $base_url.'/list-dissusion/'.$user->uid;
		$data_my_quee = drupal_json_decode(file_get_contents($url_my_quee));
		$data_nid_provider = array();
		foreach ($data_my_quee['nodes'] as $data_my_quee_item) {
			$list_data_quee_item = explode(',', $data_my_quee_item['node']['nid']);
			foreach($list_data_quee_item as $per_item_quee){
				$data_nid_provider[$per_item_quee] = trim($per_item_quee);
			}
		}

		if(!empty($data_nid_provider)){
			$list_quee_arg = '/'.implode('+', $data_nid_provider);
		}
	}

	$url = $base_url.'/provide-listing-data'.$list_quee_arg.'?search_full='.$parameter['search_full'].'&priority='.$_GET['priority'].'&city='.$_GET['city'].'&state='.$_GET['state'].'&county='.$_GET['county'].'&status='.$_GET['status'].'&date='.$date.'&hpt='.$_GET['hpt'].'&page='.$parameter['page'];

	$data = drupal_json_decode(file_get_contents($url));
	$data_telephone = array();

	foreach ($data['nodes'] as $response_data) {
		if(!empty($response_data['node']['telephone'])){
			$data_telephone[$response_data['node']['telephone']][] = $response_data['node'];
		}
	}

	$rows = array();
	$i = 1;
	foreach($data_telephone as $key => $phone){
		$provider = array();
		$city = array();
		$county = array();
		foreach($data_telephone[$key] as $item){
			$provider[] = $item['nid'];
			$city[] = $item['city'];
			$type = $item['type'];
			$county[] = $item['county'];
		}

		$provider = array_unique($provider);
		$city = array_unique($city);
		$county = array_unique($county);

		$discuss_nid = 0;
		$result_d = db_query('SELECT entity_id FROM {field_data_field_list_provider} WHERE bundle = :bundle AND field_list_provider_target_id IN(:nid)',array(':bundle' => 'discuss',':nid' => $provider)) ;
		foreach($result_d as $record){
			$discuss_nid = $record->entity_id;
		}

		$status = 'New';
		$activity = '';
		if($discuss_nid > 0){
			$node_discuss = node_load($discuss_nid);
			if(!empty($node_discuss->field_dc_status[LANGUAGE_NONE][0]['tid'])){
				$term = taxonomy_term_load($node_discuss->field_dc_status['und'][0]['tid']);
				$status = $term->name;
			}

			if(!empty($node_discuss->field_dc_date[LANGUAGE_NONE][0]['value'])){
				$date = strtotime($node_discuss->field_dc_date['und'][0]['value']);

				$activity .=date('m/d/Y H:i',$date).'<br />';
			}

			if(!empty($node_discuss->field_dc_reason_comment[LANGUAGE_NONE][0]['value'])){
				$activity .='Comment :'. $node_discuss->field_dc_reason_comment[LANGUAGE_NONE][0]['value'].'<br />';
			}
		}
		

		
		

		$rows[] = array('DT_RowId' => $i,
										'Phone #' => $key,
										'Provider' => count($provider),
										'City' => count($city),
										'County' => count($county),
										'Status' => $status,
										'View' => '<a title="Discusss with providers" href="/provider/discuss/'.$key.'"><i class="fa fa-tasks">&nbsp;</i></a>',
										'Last Activity' => $activity);
		$i++;
	}

	// if(!empty($_POST['order'][0]['dir'])) {
    	
	//    	$fields = explode('|', variable_get('wb_project_fields', ''));

	// 	   	$orderColumn = trim($fields[$_POST['order'][0]['column']]);
	// 	   	$orderDir = strtoupper($_POST['order'][0]['dir']);
		   	
	// 	   	// Obtain a list of columns
	// 		foreach ($rows as $key => $row) {
	// 		    $sort[$key]  = $row[$orderColumn];
	// 		}

	// 			// Sort the data with volume descending, edition ascending
	// 		// Add $data as the last parameter, to sort by the common key
			
	// 		if($orderDir == 'DESC') {
	// 			array_multisort($sort, SORT_DESC, $rows);
	// 		} else {
	// 			array_multisort($sort, SORT_ASC, $rows);
	// 		}
 //  }

	$data_listing['data'] = $rows;
  $data_listing['options'] = '';
  $data_listing['files'] = '';
  $data_listing['recordsTotal'] = $data['pager']['count'];
  $data_listing['recordsFiltered'] = $data['pager']['count'];
  return drupal_json_output($data_listing);
}

/**
 * Implements hook_libraries_info().
 */
function carenet_custom_libraries_info() {
  $libraries = array();
  $libraries['fpdf'] = array(
    'name' => 'FPDF',
    'vendor url' => 'http://www.fpdf.org/',
    'download url' => 'http://www.fpdf.org/',
    'files' => array(
      'php' => array(
        'fpdf.php',
      ),
    ),
    'version arguments' => array(
      'file' => 'fpdf.php',
      'pattern' => '/((\d+).(\d+))/',
      'lines' => 6,
    ),
  );

  $libraries['fpdi'] = array(
    'name' => 'FPDI',
    'vendor url' => 'http://www.setasign.com/products/fpdi/about/',
    'download url' => 'http://www.setasign.com/products/fpdi/downloads/',
    'files' => array(
      'php' => array(
        'fpdi.php',
        'fpdf_tpl.php',
      ),
    ),
    'dependencies' => array('fpdf'),
    'version arguments' => array(
      'file' => 'fpdi.php',
      'pattern' => '/((\d+)\.(\d+)\.(\d+))/',
      'lines' => 6,
    ),
  );
  return $libraries;
}

/**
 * Implements hook_requirements()
 */
function carenet_custom_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    $t = get_t();
    if ($path = libraries_get_path('fpdf')) {
      if (file_exists($path . '/fpdf.php')) {
        $requirements['fpdf'] = array(
          'title' => $t('FPDF'),
          'value' => $t('fpdf.php found under !path', array('!path' => $path . '/fpdf.php')),
          'severity' => REQUIREMENT_OK,
        );
      }
    }else {
      $requirements['fpdf'] = array(
        'title' => $t('FPDF'),
        'value' => $t('FPDF library was not found. !download the library and place in under sites/all/libraries/fpdf, so that the library can be found at sites/all/libraries/fpdf/fpdf.php.', array('!download' => l(t('Download'), 'http://www.fpdf.org/'))),
        'severity' => REQUIREMENT_ERROR,
      );
    }

    if ($path = libraries_get_path('fpdi')) {
      if (file_exists($path . '/fpdi.php') && file_exists($path . '/fpdf_tpl.php')) {
        $requirements['fpdi'] = array(
          'title' => $t('FPDI'),
          'value' => $t('fpdi.php and fpdf_tpl.php found under !path', array('!path' => $path)),
          'severity' => REQUIREMENT_OK,
        );
      }
      else if (!file_exists($path . '/fpdi.php')) {
        $requirements['fpdi'] = array(
          'title' => $t('FPDI'),
          'value' => $t('fpdi.php not found under !path. View README.txt for further instructions.', array('!path' => $path)),
          'severity' => REQUIREMENT_ERROR,
        );
      }
    }else {
      $requirements['fpdi'] = array(
        'title' => $t('FPDI'),
        'value' => $t('fpdf_tpl.php not found under !path. View README.txt for further instructions.', array('!path' => $path)),
        'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}